From c54687694b01f6b27a188a64861ec9c02dc264ab Mon Sep 17 00:00:00 2001
From: Mohamed Irfanullah M <mohamedirfan1720@gmail.com>
Date: Wed, 24 Apr 2024 22:15:52 +0530
Subject: [PATCH] graph and dataManipulator added

---
 0001-Move-python-files-to-datafeed-dir.patch | 23 ++++++++++++++
 src/DataManipulator.ts                       | 33 +++++++++++++-------
 src/Graph.tsx                                | 31 ++++++++++--------
 3 files changed, 63 insertions(+), 24 deletions(-)
 create mode 100644 0001-Move-python-files-to-datafeed-dir.patch

diff --git a/0001-Move-python-files-to-datafeed-dir.patch b/0001-Move-python-files-to-datafeed-dir.patch
new file mode 100644
index 0000000..bc3bf18
--- /dev/null
+++ b/0001-Move-python-files-to-datafeed-dir.patch
@@ -0,0 +1,23 @@
+From 988093e37b2ec7e0215609bce5445569a1a33612 Mon Sep 17 00:00:00 2001
+From: Joe Ferrer <joe@theforage.com>
+Date: Wed, 1 Mar 2023 01:05:18 +1100
+Subject: [PATCH] Move python files to datafeed dir
+
+---
+ requirements.txt => datafeed/requirements.txt | 0
+ server.py => datafeed/server3.py              | 0
+ 2 files changed, 0 insertions(+), 0 deletions(-)
+ rename requirements.txt => datafeed/requirements.txt (100%)
+ rename server.py => datafeed/server3.py (100%)
+
+diff --git a/requirements.txt b/datafeed/requirements.txt
+similarity index 100%
+rename from requirements.txt
+rename to datafeed/requirements.txt
+diff --git a/server.py b/datafeed/server3.py
+similarity index 100%
+rename from server.py
+rename to datafeed/server3.py
+-- 
+2.42.0.windows.2
+
diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7f62295..9a70937 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,31 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
-  timestamp: Date,
+ price_abc:number,
+ price_def:number,
+ ratio:number,
+ timestamp:Date,
+ upper_bound:number,
+ lower_bound:number,
+ trigger_alert:number | undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]) {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
+  static generateRow(serverRespond: ServerRespond[]): Row {
+    const priceABC = (serverRespond[0].top_ask.price+serverRespond[0].top_bid.price)/2;
+    const priceDEF = (serverRespond[1].top_ask.price+serverRespond[1].top_bid.price)/2;
+    const ratio = priceABC/priceDEF;
+    const upperBound = 1+0.05;
+    const lowerBound = 1 - 0.05;
+    return {
+      price_abc:priceABC,
+      price_def:priceDEF,
+      ratio,
+      timestamp:serverRespond[0].timestamp>serverRespond[1].timestamp?serverRespond[0].timestamp:serverRespond[1].timestamp,
+      upper_bound:upperBound,
+      lower_bound:lowerBound,
+      trigger_alert:(ratio>upperBound||ratio<lowerBound)?ratio:undefined,
+    }
   }
 }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 277797d..8617cd9 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -1,5 +1,5 @@
 import React, { Component } from 'react';
-import { Table } from '@finos/perspective';
+import { Table, TableData } from '@finos/perspective';
 import { ServerRespond } from './DataStreamer';
 import { DataManipulator } from './DataManipulator';
 import './Graph.css';
@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
-      timestamp: 'date',
+      price_abc:'float',
+      price_def:'float',
+      ratio:'float',
+      timestamp:'date',
+      upper_bound:'float',
+      lower_bound:'float',
+      trigger_alert:'float',
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -36,23 +39,25 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('columns', '["ratio","lower_bound","upper_bound","trigger_alert"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
-        timestamp: 'distinct count',
+      price_abc:'avg',
+      price_def:'avg',
+      ratio:'avg',
+      timestamp:'distinct count',
+      upper_bound:'avg',
+      lower_bound:'avg',
+      trigger_alert:'avg',
       }));
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ]as unknown as TableData);
     }
   }
 }
-- 
2.42.0.windows.2

